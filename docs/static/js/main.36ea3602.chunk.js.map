{"version":3,"sources":["types/types.js","reducers/calulationReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","actions/calculation.js","components/matrix/Answer.js","components/matrix/MatrixScreen.js","MathApp.js","index.js"],"names":["types","initialState","input","answer","echelonMatrix","answerTemp","loading","msgError","rootReducer","combineReducers","ui","state","action","type","payload","calculation","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","loadInput","loadAnswer","loadEchelonMatrix","loadAnswerTemp","Answer","matrixA","matrixB","forEach","element","console","log","className","map","index","key","i","position","toPrecision","MatrixScreen","useSelector","dispatch","useDispatch","useState","setInput","onSubmit","e","preventDefault","split","mtxA","mtxB","length","substr","count","parseFloat","x","j","mik","k","suma","eliminacionGauss","value","onChange","target","Math","ReactDOM","render","MathApp","document","getElementById"],"mappings":"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","file":"static/js/main.36ea3602.chunk.js","sourcesContent":["export const types = {\n\n\n    calculate: '[Calculate] Calculate',\n    calculateLoadInput: '[Calculate] Load Input',\n    calculateLoadAnswer: '[Calculate] Load Answer',\n    calculateLoadAnswerTemp: '[Calculate] Load Answer Temp',\n    calculateLoadEchelonMatrix: '[Calculate] Load Echelon Matrix',\n    \n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    input:[],\n    answer:[],\n    echelonMatrix:{},\n    answerTemp:[],\n}\n\nexport const calculationReducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case types.calculate:\n            return {\n                ...state,\n                answer:action.payload\n            }\n        case types.calculateLoadInput:\n            return {\n                ...state,\n                input:action.payload\n            }\n        case types.calculateLoadAnswer:\n            return {\n                ...state,\n                answer:action.payload\n            }\n        case types.calculateLoadEchelonMatrix:\n            return {\n                ...state,\n                echelonMatrix:action.payload\n            }\n        case types.calculateLoadAnswerTemp:\n            return {\n                ...state,\n                answerTemp:action.payload\n            }\n        default:\n            return state;\n    }\n}","import { types } from '../types/types';\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { calculationReducer } from \"./calulationReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calculation: calculationReducer\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { types } from \"../types/types\";\n\n export const eliminacionGauss = ( input ) => {\n    return ( dispatch ) => {\n        \n        let matrixA = [];\n        let matrixB = [];\n        let [mtxA, mtxB] = input.split('=');\n        if( (mtxA[0] === '{') && (mtxA[1] === '{') && (mtxA[mtxA.length - 1] === '}') && (mtxA[mtxA.length - 2] === '}') ){\n            mtxA = mtxA.substr( 2, mtxA.length - 4 );\n            let count = 0;\n            mtxA.split('},{').forEach(element => {\n                matrixA[count] = [...element.split(',').map(parseFloat)];\n                count++;\n            });\n        }else{\n            return;\n        }\n        if( (mtxB[0] === '{') && (mtxB[mtxB.length - 1] === '}') ){\n            mtxB = mtxB.substr( 1, mtxA.length - 2 );\n            matrixB = [...mtxB.split(',').map(parseFloat)];\n        }else{\n            return;\n        }\n\n        dispatch( loadInput( matrixA.map( element => [...element] ) ) );\n        dispatch( loadAnswerTemp( [...matrixB] ) )\n\n        let x = [];\n        for (let index = 0; index < matrixA.length; index++) {\n            x[index] = 0;\n        }\n\n        for (let i = 0; i < matrixA.length - 1; i++) {\n            for (let j = i + 1; j < matrixA.length; j++) {\n                let mik=matrixA[j][i]/matrixA[i][i];\n                for (let k = 0; k < matrixA.length; k++) {\n                    matrixA[j][k]=matrixA[j][k]-mik*matrixA[i][k];\n                }                \n                matrixB[j]=matrixB[j]-mik*matrixB[i];\n            }            \n        }\n\n        dispatch( loadEchelonMatrix( {matrixA, matrixB} ) );\n\n        for (let i = matrixA.length - 1; i >= 0; i--) {\n            let suma = 0;\n            for (let j = i; j < matrixA.length; j++) {\n                suma+=matrixA[i][j]*x[j];                \n            }\n            x[i]=(1/matrixA[i][i])*(matrixB[i]-suma);\n        }\n\n        dispatch( loadAnswer(x) )\n\n        console.log(x);\n\n    }\n }\n\n const loadInput = ( input ) => ({\n     type: types.calculateLoadInput,\n     payload: input\n })\n\n const loadAnswer = ( answer ) => ({\n    type: types.calculateLoadAnswer,\n    payload: answer\n })\n\n const loadEchelonMatrix = ( echelonMatrix ) => ({\n    type: types.calculateLoadEchelonMatrix,\n    payload: echelonMatrix\n })\n\n const loadAnswerTemp = ( answerTemp ) => ({\n    type: types.calculateLoadAnswerTemp,\n    payload: answerTemp\n })","import React from 'react';\n\nconst Answer = ({matrixA, matrixB}) => {\n    matrixA.forEach(element => {\n        console.log(element)\n    });\n    return (\n        <div>\n            <table className=\"table-matrix\">\n                <tbody>\n                    {\n                        matrixA.map((element, index) => (\n                            <tr key={index}>\n                                {element.map( (i, position) => (\n                                    <td key={position}>{i.toPrecision(4)} </td>\n                                ))}\n                                <td></td>\n                                <td>\n                                    { matrixB[index].toPrecision(4) }\n                                </td>\n                            </tr>\n                        ))\n                    }       \n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Answer\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { eliminacionGauss } from '../../actions/calculation';\nimport Answer from './Answer';\nimport './MatrixScreen.css';\n\nconst MatrixScreen = () => {\n\n    const {input:matrixA, answer, echelonMatrix, answerTemp} = useSelector(state => state.calculation);\n    \n    const dispatch = useDispatch();\n    \n    const [input, setInput] = useState(\"{{3,7,2},{5,1,7},{1,8,3}}={1,9,4}\");\n\n    const handleInputChange = ({ target }) => {\n        setInput( target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch( eliminacionGauss( input ) );\n    }\n\n    return (\n        <>\n            <form onSubmit={ handleSubmit } className={(answer.length>0?`top-3`:`top-10`)+` animation`}>\n                <div className=\"center-text mb-3\">\n                    <h1 className=\"color-blue same-line\">\n                        Diego\n                    </h1>\n                    <h1 className=\"color-orange same-line\">\n                        Alpha\n                    </h1>\n                </div>\n                <input  \n                    className=\"form-control main-input mb-3\"\n                    value={ input }\n                    onChange={ handleInputChange }\n                />\n                <div className=\"text-center mb-5\">\n                    <h3>Eliminación de Gauss-Jordan</h3>\n                </div>\n            </form>\n            { (answer.length>0) && (\n            <div>\n                <hr></hr>\n                <Answer className=\"table-matrix\" matrixA={matrixA} matrixB={answerTemp}/>\n                <hr></hr>\n                <Answer className=\"table-matrix\" matrixA={echelonMatrix.matrixA} matrixB={echelonMatrix.matrixB}/>\n                <hr></hr>\n                <table className=\"table-matrix\">\n                    <tbody>\n                        {answer.map( (element, i) =>(\n                            <tr key={i}>\n                                <td>\n                                    Y{i}\n                                </td>\n                                <td>\n                                    {element.toPrecision(3)}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>)}\n            <div className=\"space\"></div>\n        </>\n    )\n}\n\nexport default MatrixScreen;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nimport MatrixScreen from './components/matrix/MatrixScreen';\n\nconst Math = () => {\n    return (\n        <Provider store={store}>\n            <MatrixScreen />\n        </Provider>\n    )\n}\n\nexport default Math;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MathApp from './MathApp';\n\nReactDOM.render(\n    <MathApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}